class Main {
  public static void main(String[] args) {
    System.out.println("Hello world!");
  }
}
class KnapSack{
public static int knapsack(Integer w, int[][] vals){
    int [][] arr = new int[w][vals.length]; 
    int max = -1;
    for(int i = 1; i < w; i++){
        for(int j =0 ;  j< vals.length; j++){
            if(vals[j][0] > i){
                arr[i][j] = arr[i-1][j];
            }
            else{
            if(weight(vals[j][0])==-1){
            arr[i][j] = vals[j][1];
            if(arr[i][j] > max){
                max = arr[i][j];
            }
            }
            else{
                arr[i][j] = vals[j][1] + weight(i-vals[j][0]);
                if(arr[i][j-1] > arr[i][j]){
                    arr[i][j] = arr[i][j];
                }
                if(arr[i][j] > max){
                    max = arr[i][j];
                }                
            }
            }
        }
    }
    return max;
}

public static int weight(Integer ints, int [][] arr){
    if(arr[ints][0] == 0){
        return -1;
    }
    int max = 0;
    for(i =0 ; i < arr[ints].length; i++){
        if(arr[ints][i] > max){
            max = arr[ints][i]; 
        }
    }
    return max;
}
}
/*
string a = "abcdefg"
string b = "bcdaefgh"

0  a  b c   d   e   f   g
b \0  b b   b   b   b   b
c \0  b bc  bc  bc  bc  bc
d \0  b bc bcd bcd bcd bcd
e
f
g
h

string "haszsda"
string "eidoasjfeda"

0 h    a    s    z    s    d    a
e \0   \0   \0   \0   \0   \0   \0
i \0   \0   \0   \0   \0   \0   \0
d \0   \0   \0    \0   \0   d    d
o \0   \0   \0    \0   \0   d   d
a \0    a    a     a    a   a   da
s \0   \0    as    as    as   as   as
j
f
e
d      a     as     as    as  asd  asd
a  
*/

public static String lcs(String a, String b, int a_pos, int b_pos) {
	if(a_pos > a.length() || b_pos > b.length()) {
		return "";
	}
	if(a.charAt(a_pos) == a.charAt(b_pos)) {
		return a.charAt(a_pos) + lcs(a, b, a_pos + 1, b_pos + 1);
	} else {
		String temp1 = "", temp2="";
		temp1 = lcs(a, b, a_pos + 1, b_pos);
		temp2 = lcs(a, b, a_pos, b_pos + 1);
		return temp1.length() > temp2.length()? temp1: temp2;
	}
}
